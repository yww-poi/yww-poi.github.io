{"meta":{"title":"poipoipoiの博客","subtitle":null,"description":"人类的赞歌就是勇气的赞歌！","author":"守望海的胖子","url":"http://yoursite.com"},"pages":[{"title":"","date":"2018-09-30T20:04:09.252Z","updated":"2018-09-30T20:04:09.252Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"这是守望海的胖子的一个小博客平时会写点小东西和笔记妮可妮可妮（poi，加藤惠，照月都是我老婆））—"},{"title":"Categories","date":"2018-10-05T07:35:44.000Z","updated":"2018-10-05T07:35:44.176Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tagcloud","date":"2014-12-22T04:39:04.000Z","updated":"2018-09-30T18:04:20.107Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"hello-world2","date":"2018-10-05T07:45:28.219Z","updated":"2018-10-05T08:07:26.258Z","comments":true,"path":"2018/10/05/hello-world2/","link":"","permalink":"http://yoursite.com/2018/10/05/hello-world2/","excerpt":"","text":"#搭建博客的总结author：守望海的胖子标签（空格分隔）： 随笔 ##1.前言 关于搭建这个博客的缘由，有两个吧，一个是完成露西师兄的作业，也可以说是主要原因：另一个也是想找个地方，可以写一写自己想写的东西，表达一些自己的想法 在这过程中遇到的问题也不少，因为自己刚入门，可以说是没基础了，所以也不可能自己动手去写一个博客出来，就只能沿用别人搭好了的博客来自己配置一下 ##2.涉及到的内容以及搭建说明 ###以下是我对这一次搭建博客的总结，我会写到以下内容 搭建博客的具体过程以及搭建博客时遇到的问题 现存的问题以及未来想解决的问题###搭建说明 本文用到的系统为windows10 家庭版 ###为该命令的注释 站点配置文件，位于站点文件夹根目录：/blog 主题配置文件，位于主题文件夹根目录内：/blog/themes/主题/_config.yml ##3.搭建前的准备在google了之后，我最终选择了hexo+github搭建个人网站，而我选择的理由如下 免费：github提供gh-pages服务是免费的 简单：博客完全托管在github上，基本上不需要花时间去管理（对我这种小白友好一点）###3.1 安装Github 先前往GitHub官网：https://github.com/ 进行注册 之后在Github创建一个自己的仓库：右上角选择，your Repositories，之后新建一个仓库命名为 我的用户名.github.io（比如我就是yww-poi.github.io） 之后是安装Github： windows的话点击[下载地址][1]下载后一路next linux可以先用命令$ git查看是否安装如果没有安装则可用命令$ sudo apt-get install git ###适用于ubuntu linux直接安装###3.2 配置SSH Kye为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 用git bash执行如下命令：$ cd ~/. ssh会提示：No such file or directory 之后输入命令$ ssh-keygen -t rsa -C &quot;邮件地址&quot;邮箱改为自己的地址，三次回车 打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开github主页，进入个人设置 -&gt; SSH andGPG keys -&gt; New SSH key：将刚复制的内容粘贴到key那里。 测试看看是否配置成功 1.用git bash执行如下命令：$ ssh -T git@github.com 2.之后会提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：Hi yww-poi! You’ve successfully authenticated, but GitHub does not provide shell access. 3.之后配置： $ git config --global user.name &quot;yww-poi&quot; $ git config --global user.email &quot;xxx@qq.com&quot;邮箱改为自己的地址###3.3 安装hexo 鼠标右键 git bash下执行：$ npm install -g hexo 接着输入$ cd /h/hexo/ 在这个路径新建一个名为hexo的文件夹，该文件夹用于存放代码 再输入$ hexo init 执行后hexo会自动下载一些文件到所指定目录 之后执行$ hexo g ### 生成$ hexo s###启动服务hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的。 $ hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000即可预览###3.4 安装node.js 先下载并安装，一路next，这里给出下载地址：[64位windows系统][2] 检查Node.js版本，win+r组合键，输入cmd，然后输入命令$ node --version 如果输出的是一个版本号，则成功安装node.js###3.5 设置博客 在自己选择的目录（这里我选择的是H盘根目录）按住Shift键点击鼠标右键，选择“在此处打开命令窗口”，输入$ hexo init blog之后会有提示INFO Start blogging with Hexo! 之后进入新建的blog文件夹，在此处打开命令窗口（由于以后大多都是在这个地方打开命令行窗口，故以后将简化为打开cmd），然后输入命令 $ hexo g ### 启动本地服务器$ hexo s ###在浏览器输入 http://localhost:4000/就可以看见网页和模板了之后会有提示INFO Start processing INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.就可以打开http://localhost:4000/浏览博客初步的模样了###3.6 将博客发布到github 重新打开CMD，输入：$ ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot; 一直enter，直到得到信息Your public key has been saved in /c/Users/user/.ssh/id_rsa.pub. 找到该文件，打开（sublime text），Ctrl + a复制里面的所有内容，然后进入Sign in to GitHub：https://github.com/settings/sshNew SSH key ——Title：blog —— Key：输入刚才复制的—— Add SSH key###3.7 这个过程中遇到的问题总结在这个过程中总体还是比较平稳的，没发生什么大的问题，除了在设置博客的时候因为google查阅的文章的操作不全，而导致在blog外的目录打开的命令行输入的命令无效，让我头疼了比较久的时间，总体上还是比较平稳的 ##4 博客的基本配置在以上操作之后我们得到了一个最基本的博客页面，但是只是最基本的页面，里面什么也没有，所以需要设置一下让它看起来不至于很单调… ###4.1 文章的发布博客就是写东西分享给人看的，所以建立一个博客首先要学会的最基本的操作就是如何写文章并发布 创建文档有两种方法 命令法：打开cmd，输入$ hexo new hello world ###此处可以替换为文章名&quot;文章将会存放在\\source_posts中，用文本编译器编译文章 直接法：在 source/_posts/下新建一个 .md文件也可 在编译时请使用markdown语法，具体可以点击[markdown语法介绍][3]进行查看 编译完成后，输入命令：123$ hexo clean $ hexo g` $ hexo s 打开http://localhost:4000即可查看该文章 在本地编辑完成后，输入命令：$ hexo d ###发布至github即可发布到你的博客###4.2 站点文件配置：关于站点文件信息的修改[详见此网页][4] ###4.3 博客的主题配置对小白来说，自己不会自己写一个，又想要好看的博客，最好的方法就是使用别人的主题，在github中有很多很好看的主题，可以fork过来然后自己配置，然后加上一些自己喜欢的小功能并配置，那么以下我放上自己配置的过程 hexo有很多好看的主题，让我们先去[官网][5]挑一个，我选用的是next主题 之后是下载，选择你想要的主题下载下来，打开cmd执行命令：`$ git clone https://github.com/iissnan/hexo-theme-next themes/next 在网站配置文件_config.yml中，配置themetheme: next ###next更换为对应主题的名词 之后，执行调试命令： 123$ hexo c$ hexo g$ hexo s 在确认之后可以配置到github:$ hexo d 这样我们就得到了主题的最基本的框架了，之后就是自己的配置了 4.4 这个阶段遇到的问题以及总结因为自己还没学会如何写一个博客的框架，所以选择了自己去fork一个，最初fork的框架由于自己不明白如何去设置配置文件，而导致自己的一些设置保存了却无效的情况，最终也是在配置完成之前先把自己折腾坏了，放弃了最初的框架。随后发现了hexo的官网是有主题可以去挑选的，最终选择了next这个主题，因为这个主题很简洁，吸引了我，有了第一次配置的失误，第二次配置也就轻松了点。 ##5. 博客主题的配置以及个性化设置 5.1 主题文件配置修改目录/theme/主题名称/下的主题配置文件可以对主题进行一些最基本的配置，可以参考[该网页][6]进行配置 5.2 添加标签页面与关于页面 标签页设置 新建一个标签页面 $ hexo new page tags你会发现你的source文件夹下有了tags/index.md，打开index.md文件将title设置为title: 标签 打开 主题配置文件，找到menu，将tags前的#删除 把文章添加标签只需在文章的顶部标题下方添加tags字段，即可自动创建标签名并归入对应的标签中 关于页面设置 新建一个关于页面hexo new page about 修改主题配置文件，取消 #about: /about 这行注释commonweal: /404.html 编辑站点目录下 编辑source/about 的 index.md 文件内容，内容将显示在关于页面。 启动本地服务，就可以看到关于菜单，点击可进入关于页，显示内容即是 source/about/index.md 对应内容。 5.3 添加分类模块 新建一个分类页面：$ hexo new page categories 你会发现你的source文件夹下有了categorcies/index.md，打开index.md文件将title设置为title: 分类 打开 主题配置文件 找到menu，将categorcies前的#删除 把文章归入分类只需在文章的顶部标题下方添加categories字段，即可自动创建分类名并加入对应的分类中 5.4 站点建立时间这个时间将在站点的底部显示，例如© 2018。编辑主题配置文件，新增字段 since: 2018 5.5 在文末添加”本文结束” 在 \\themes\\next\\layout_macro 新建 passage-end-tag.swig 文件添加以下内容： 12345&gt; 1. &lt;div&gt;&gt; 2. &#123;% if not is_index %&#125;&gt; 3. &lt;div style=&quot;text-align:center;color: #636363;font-size:14px;letter-spacing: 10px&quot;&gt;本文结束啦&lt;i class=&quot;fa fa-bell&quot;&gt;&lt;/i&gt;感谢您的阅读&lt;/div&gt;&gt; 4. &#123;% endif %&#125;&gt; 5. &lt;/div&gt; 打开文件： \\themes\\next\\layout_macro\\post.swig，找到post-body 并添加代码 12345&gt; 1. &lt;div&gt;&gt; 2. &#123;% if not is_index %&#125;&gt; 3. &#123;% include &apos;passage-end-tag.swig&apos; %&#125;&gt; 4. &#123;% endif %&#125;&gt; 5. &lt;/div&gt; 最后在 主题配置文件 末尾添加： 123&gt; 1. // 文本结束提示语&gt; 2. passage_end_tag:&gt; 3. enabled: true","categories":[],"tags":[]},{"title":"","slug":"hello-world","date":"2018-09-23T14:14:26.726Z","updated":"2018-10-04T12:10:40.994Z","comments":true,"path":"2018/09/23/hello-world/","link":"","permalink":"http://yoursite.com/2018/09/23/hello-world/","excerpt":"","text":"title: Hello WorldWelcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}