{"meta":{"title":"poipoipoiの博客","subtitle":null,"description":"人类的赞歌就是勇气的赞歌！","author":"守望海的胖子","url":"http://yoursite.com"},"pages":[{"title":"Categories","date":"2018-10-05T07:35:44.000Z","updated":"2018-10-05T07:35:44.176Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-09-30T20:04:09.252Z","updated":"2018-09-30T20:04:09.252Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"这是守望海的胖子的一个小博客平时会写点小东西和笔记妮可妮可妮（poi，加藤惠，照月都是我老婆））—"},{"title":"Post","date":"2018-11-04T14:39:00.000Z","updated":"2018-11-04T14:39:00.997Z","comments":true,"path":"post/index.html","permalink":"http://yoursite.com/post/index.html","excerpt":"","text":""},{"title":"Tagcloud","date":"2014-12-22T04:39:04.000Z","updated":"2018-09-30T18:04:20.107Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"学习Linux的一些总结之一","slug":"学习Linux的一些总结之一","date":"2018-11-04T14:11:17.000Z","updated":"2018-11-04T15:11:41.990Z","comments":true,"path":"2018/11/04/学习Linux的一些总结之一/","link":"","permalink":"http://yoursite.com/2018/11/04/学习Linux的一些总结之一/","excerpt":"前言迟来的总结，本来是两周前就写的，不过还是自己太懒了，拖到现在.那么先简述一下我这三个周学到的东西 Linux的选择与安装（重点） 云服务器的首次接触 LVM的基础以及应用","text":"前言迟来的总结，本来是两周前就写的，不过还是自己太懒了，拖到现在.那么先简述一下我这三个周学到的东西 Linux的选择与安装（重点） 云服务器的首次接触 LVM的基础以及应用 Linux的选择与安装1.Linux发行版的选择这应该是我这三个周最纠结的问题了，有很多人告诉我，如果想用Linux的话，Ubuntu是一个对新手比较友好的系统；但是在云服务器上，包括我自己购买的服务器，用的是CentOS系统（后来经一个朋友纠正，服务器也可以用Ubuntu，但是CentOS更多更合适一点）。由于自己是用虚拟机安装的Linux，最后索性就两个都安装了，都体验了一下。 2.Linux系统的安装2.0工具与环境镜像源： https://mirrors.scau.edu.cn/使用的虚拟机软件：VMware 2.1 Ubuntu 18.04在安装Ubuntu的时候没有出现太多问题，一直都是next，就完成了。在这个过程中的认识 Ubuntu也分版本，而我一开始下载的Ubuntu server是没有图形界面的，经提醒之后更换了安装源 不同于windows，Linux的图形界面算是系统上的一种应用，换而言之，没有图形界面了一样可以用，我安装的Ubuntu的图形系统叫unity，基于GNOME 3 2.2 CentOS 7装CentOS的过程比较坎坷，中间重装了六次 前三次选择的是无图形界面的CentOS，由于网卡设置上的失误，无法联网，尝试重装无效，最后选择更换源 后三次在安装的时候疑惑于为何安装的时候无图形界面，最后在第三次重装的时候，发现在软件选择界面中可以选择带GUI的服务器的安装选项，这个选项安装后的Centos有图形界面 在执行yum update时，在一个固定软件更新时必定卡死，并且之后的每次重启都会重置系统设置，重装无效。原因暂时未知，打算在使用物理盘安装CentOS之后看看。 在这个期间的认识 服务器使用的也是Linux系统，大多是Centos系统，但是也可以选择Ubuntu系统，只不过两者在特定情况下，前者比后者好用。 ##云服务器的初次接触在自己了解以及师兄的安利下，我发现腾讯云与阿里云均可以以学生身份，10元/月购置一个小型云服务器。但是由于我对CentOS系统并不熟悉，在首次接触服务器时（腾讯可以免费领一个15天的最小配置云服务器）有点茫然无措，暂时的计划是先初步熟悉CentOS系统之后考虑购置一个自用服务器。 ##LVM基础以及应用对于Linux，它并不能像Windows一样可直接分区，linux的硬盘被归为一个文件在/dev里面。而LVM是Linux环境下对磁盘分区进行管理的一种机制。由于自己之前对于Linux的磁盘认识并不是很清楚，所以在使用时遇到了一些障碍 使用fdisk分区后没有格式化和挂载分区，使我对“为什么我分区了但是没显示出来”这个问题疑惑了很久 照搬书上的操作导致选不到硬盘，最后在VMware重新创建了一块虚拟硬盘解决。 ##以后的计划 购置一块固态硬盘（已完成） 用这块固态硬盘真正完成Linux物理机的安装 继续学习Linux基础，包括基础命令和磁盘文件管理","categories":[],"tags":[{"name":"Linux  总结","slug":"Linux-总结","permalink":"http://yoursite.com/tags/Linux-总结/"}]},{"title":"搭建博客的过程与总结","slug":"搭建博客的过程与总结","date":"2018-10-05T10:11:17.000Z","updated":"2018-11-04T15:02:23.237Z","comments":true,"path":"2018/10/05/搭建博客的过程与总结/","link":"","permalink":"http://yoursite.com/2018/10/05/搭建博客的过程与总结/","excerpt":"1.前言 关于搭建这个博客的缘由，有两个吧，一个是完成露西师兄的作业，也可以说是主要原因：另一个也是想找个地方，可以写一写自己想写的东西，表达一些自己的想法 在这过程中遇到的问题也不少，因为自己刚入门，可以说是没基础了，所以也不可能自己动手去写一个博客出来，就只能沿用别人搭好了的博客来自己配置一下 ———-","text":"1.前言 关于搭建这个博客的缘由，有两个吧，一个是完成露西师兄的作业，也可以说是主要原因：另一个也是想找个地方，可以写一写自己想写的东西，表达一些自己的想法 在这过程中遇到的问题也不少，因为自己刚入门，可以说是没基础了，所以也不可能自己动手去写一个博客出来，就只能沿用别人搭好了的博客来自己配置一下 ———- 2.涉及到的内容以及搭建说明以下是我对这一次搭建博客的总结，我会写到以下内容 搭建博客的具体过程以及搭建博客时遇到的问题 现存的问题以及未来想解决的问题###搭建说明 本文用到的系统为windows10 家庭版 ###为该命令的注释 站点配置文件，位于站点文件夹根目录：/blog 主题配置文件，位于主题文件夹根目录内：/blog/themes/主题/_config.yml 斜体为本人在实践时的一些想法或者一些问题。 3.搭建前的准备在google了之后，我最终选择了hexo+github搭建个人网站，而我选择的理由如下 免费：github提供gh-pages服务是免费的 简单：博客完全托管在github上，基本上不需要花时间去管理（对我这种小白友好一点）3.1 安装Github 先前往GitHub官网：https://github.com/ 进行注册 之后在Github创建一个自己的仓库：右上角选择，your Repositories，之后新建一个仓库命名为 我的用户名.github.io（比如我就是yww-poi.github.io） 之后是安装Github： windows的话点击下载地址下载后一路next linux可以先用命令$ git查看是否安装如果没有安装则可用命令$ sudo apt-get install git ###适用于ubuntu linux直接安装3.2 配置SSH Kye为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 用git bash执行如下命令：$ cd ~/. ssh会提示：No such file or directory 之后输入命令$ ssh-keygen -t rsa -C &quot;邮件地址&quot;邮箱改为自己的地址，三次回车 打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开github主页，进入个人设置 -&gt; SSH andGPG keys -&gt; New SSH key：将刚复制的内容粘贴到key那里。 测试看看是否配置成功 1.用git bash执行如下命令：$ ssh -T git@github.com 2.之后会提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：Hi yww-poi! You’ve successfully authenticated, but GitHub does not provide shell access. 3.之后配置： $ git config --global user.name &quot;yww-poi&quot; $ git config --global user.email &quot;xxx@qq.com&quot;邮箱改为自己的地址3.3 安装hexo 鼠标右键 git bash下执行：$ npm install -g hexo 接着输入$ cd /h/hexo/ 在这个路径新建一个名为hexo的文件夹，该文件夹用于存放代码 再输入$ hexo init 执行后hexo会自动下载一些文件到所指定目录 之后执行$ hexo g ### 生成$ hexo s###启动服务hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的。 $ hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000即可预览 3.4 安装node.js 先下载并安装，一路next，这里给出下载地址：64位windows系统 检查Node.js版本，win+r组合键，输入cmd，然后输入命令$ node --version 如果输出的是一个版本号，则成功安装node.js3.5 设置博客 在自己选择的目录（这里我选择的是H盘根目录）按住Shift键点击鼠标右键，选择“在此处打开命令窗口”，输入$ hexo init blog之后会有提示INFO Start blogging with Hexo! 之后进入新建的blog文件夹，在此处打开命令窗口（由于以后大多都是在这个地方打开命令行窗口，故以后将简化为打开cmd），然后输入命令 $ hexo g ### 启动本地服务器$ hexo s ###在浏览器输入 http://localhost:4000/就可以看见网页和模板了之后会有提示INFO Start processing INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.就可以打开http://localhost:4000/浏览博客初步的模样了 3.6 将博客发布到github 重新打开CMD，输入：$ ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot; 一直enter，直到得到信息Your public key has been saved in /c/Users/user/.ssh/id_rsa.pub. 找到该文件，打开（sublime text），Ctrl + a复制里面的所有内容，然后进入Sign in to GitHub：https://github.com/settings/sshNew SSH key ——Title：blog —— Key：输入刚才复制的—— Add SSH key###3.7 这个过程中遇到的问题总结在这个过程中总体还是比较平稳的，没发生什么大的问题，除了在设置博客的时候因为google查阅的文章的操作不全，而导致在blog外的目录打开的命令行输入的命令无效，让我头疼了比较久的时间，总体上还是比较平稳的 4 博客的基本配置在以上操作之后我们得到了一个最基本的博客页面，但是只是最基本的页面，里面什么也没有，所以需要设置一下让它看起来不至于很单调… 4.1 文章的发布博客就是写东西分享给人看的，所以建立一个博客首先要学会的最基本的操作就是如何写文章并发布 创建文档有两种方法 命令法：打开cmd，输入$ hexo new hello world ###此处可以替换为文章名&quot;文章将会存放在\\source_posts中，用文本编译器编译文章 直接法：在 source/_posts/下新建一个 .md文件也可 在编译时请使用markdown语法，具体可以点击markdown语法介绍进行查看 编译完成后，输入命令：123$ hexo clean $ hexo g $ hexo s 打开http://localhost:4000即可查看该文章 在本地编辑完成后，输入命令：$ hexo d ###发布至github即可发布到你的博客4.2 站点文件配置：关于站点文件信息的修改详见此网页 4.3 博客的主题配置对小白来说，自己不会自己写一个，又想要好看的博客，最好的方法就是使用别人的主题，在github中有很多很好看的主题，可以fork过来然后自己配置，然后加上一些自己喜欢的小功能并配置，那么以下我放上自己配置的过程 hexo有很多好看的主题，让我们先去官网挑一个，我选用的是next主题 之后是下载，选择你想要的主题下载下来，打开cmd执行命令：`$ git clone https://github.com/iissnan/hexo-theme-next themes/next 在网站配置文件_config.yml中，配置themetheme: next ###next更换为对应主题的名词 之后，执行调试命令： 123$ hexo c$ hexo g$ hexo s 在确认之后可以配置到github:$ hexo d 这样我们就得到了主题的最基本的框架了，之后就是自己的配置了 4.4 这个阶段遇到的问题以及总结因为自己还没学会如何写一个博客的框架，所以选择了自己去fork一个，最初fork的框架由于自己不明白如何去设置配置文件，而导致自己的一些设置保存了却无效的情况，最终也是在配置完成之前先把自己折腾坏了，放弃了最初的框架。随后发现了hexo的官网是有主题可以去挑选的，最终选择了next这个主题，因为这个主题很简洁，吸引了我，有了第一次配置的失误，第二次配置也就轻松了点。 5. 博客主题的配置以及个性化设置5.1 主题文件配置修改目录/theme/主题名称/下的主题配置文件可以对主题进行一些最基本的配置，可以参考该网页进行配置 5.2 菜单配置 菜单包括：首页、归档、分类、标签、关于 打开 主题配置文件 找到Menu Settings123456789menu: home: / || home ###首页 archives: /archives/ || archive ###归档 categories: /categories/ || th ###分类 tags: /tags/ || tags ###标签 about: /about/ || user ###关于 #schedule: /schedule/ || calendar ###日程表 #sitemap: /sitemap.xml || sitemap ###站点地图 #commonweal: /404/ || heartbeat ###公益404 如果想打开这个选项，就删掉前面的#，如果不想打开，则在选项前加上#关于后面的格式，以archives: /archives/ || archive为例：|| 之前的/archives/表示标题“归档”，关于标题的格式可以去themes/next/languages/zh-Hans.yml中参考或修改||之后的archive表示图标，可以去Font Awesome中查看或修改，Next主题所有的图标都来自Font Awesome。 5.3 添加标签页面与关于页面 标签页设置 新建一个标签页面 $ hexo new page tags之后source文件夹下有了tags/index.md，打开index.md文件将title设置为title: 标签 打开 主题配置文件，找到menu，将tags前的#删除 把文章添加标签只需在文章的顶部标题下方添加tags字段，即可自动创建标签名并归入对应的标签中 关于页面设置 新建一个关于页面hexo new page about 修改主题配置文件，取消 about: /about 这行注释 编辑source/about 的 index.md 文件内容，内容将显示在关于页面。 启动本地服务，就可以看到关于菜单，点击可进入关于页，显示内容即是 source/about/index.md 对应内容。 5.4 添加分类模块 新建一个分类页面：$ hexo new page categories 你会发现你的source文件夹下有了categorcies/index.md，打开index.md文件将title设置为title: 分类 打开 主题配置文件 找到menu，将categorcies前的#删除 把文章归入分类只需在文章的顶部标题下方添加categories字段，即可自动创建分类名并加入对应的分类中 5.5 站点建立时间这个时间将在站点的底部显示，例如© 2018。编辑主题配置文件，新增字段 since: 2018 5.6 在文末添加”本文结束” 在 \\themes\\next\\layout_macro 新建 passage-end-tag.swig 文件添加以下内容： 12345&lt;div&gt;&#123;% if not is_index %&#125;&lt;div style=&quot;text-align:center;color: #636363;font-size:14px;letter-spacing: 10px&quot;&gt;本文结束啦&lt;i class=&quot;fa fa-bell&quot;&gt;&lt;/i&gt;感谢您的阅读&lt;/div&gt;&#123;% endif %&#125;&lt;/div&gt; 打开文件： \\themes\\next\\layout_macro\\post.swig，找到post-body 并添加代码 12345&lt;div&gt;&#123;% if not is_index %&#125;&#123;% include &apos;passage-end-tag.swig&apos; %&#125;&#123;% endif %&#125;&lt;/div&gt; 最后在 主题配置文件 末尾添加： 123文本结束提示语passage_end_tag:enabled: true 5.7 插入网易云播放器 进入网页版网易云，选择你想要播放的歌，点击，之后选择“生成外链播放器”，复制html代码 将外链插入到hexo/themes/next/layout中的文件中，根据放置的位置选择对应的文件插入代码 我将播放器插入侧边栏，则我将代码放入了_macro文件夹中的 sidebar.swig文件 如果想要插入一个歌单的话，自己是看不到自己歌单“生成外链播放器”这个选项的。解决方法，可以先在网易云将此歌单分享，之后用别人的账号进入这个歌单，就可以找到“生成外链播放器”这个选项，之后同上 如果是想在文章中加上这个播放器的话，则在想要的位置插入这个代码即可 在直接插入播放器的时候会遇到一个问题，就是如果刷新页面，或者进入到别的页面的话播放器也会跟着刷新，然后曲子会重新播放。由于我的技术原因我想不到如何解决，后续我会寻找解决方法解决这个问题 5.8 添加阅读全文按钮博客主页会有多篇文章，如果想让文章只显示一部分，多余的可以点击阅读全文来查看，那么你需要在你的文章中添加 &lt;!--more--&gt; 那么在代码之后的就不会显示了 5.9 加入评论系统这里直接放上我查到的dalao的做法设置步骤：在主题配置文件加入你的LeanCloud的appid以及appkey即可123456789valine: enable: true appid: ### your app id appkey: ### your app key notify: true # mail notifier , https://github.com/xCss/Valine/wiki verify: true # Verification code placeholder: ヾﾉ≧∀≦)o guest_info: nick,mail,link pageSize: 10 没有开启邮箱提醒的请把 notify 和 verify 设为 false关于app ID和app key，详见点击此处一开始在照搬某些dalao的评论系统的时候出了很多错误导致评论系统无法运行，本是不打算弄这个功能的，打算以后再删掉。直到后来在写这篇文章的时候偶然发现我没有注册learncloud，于是去注册了一下，这个功能就可以用了，于是便留着了。问题归结在自己没有太认真去看dalao的说明，以后在google的时候请注意 5.10 博客头像的更换，头像改为圆的以及头像旋转 头像设置：直接覆盖主题目录下的 source/images 的 avatar.git 文件，简单暴力 打开\\themes\\next\\source\\css_common\\components\\sidebar\\sidebar-author.styl，在里面添加如下代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 5.11 动态可交互背景 打开/themes/next/layout/_layout.swig文件，在&lt;!DOCTYPE html&gt;下一行添加代码如下：1234&#123;% if theme.canvas_nest %&#125;&lt;script type=&quot;text/javascript&quot;color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125; 相关项的修改参考如下 属性说明：color ：线条颜色, 默认:‘0,0,0’；三个数字分别为(R,G,B)opacity: 线条透明度（0~1）, 默认: 0.5count: 线条的总数量, 默认:150zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1 5.12 隐藏网页底部文字打开themes/next/layout/_partials/footer.swig，直接删除以下代码123456789101112131415161718&#123;% if theme.footer.powered %&#125; &lt;div class=&quot;powered-by&quot;&gt;&#123;# #&#125;&#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;&#123;% endif %&#125;&#123;% if theme.footer.theme.enable %&#125; &lt;div class=&quot;theme-info&quot;&gt;&#123;# #&#125;&#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125; 在操作这个的时候，根据网上查阅的资料我选择了删除这行代码而不是隐藏。但是在删除的时候由于误删别的代码，而导致博客无法通过调试命令在本地上运行，一直报错，而且自己也没有备份。后来重新google了一下，拷贝了这份文件的备份放了进去。之后我先重新备份一份这样的文件之后再一行一行删除确认，最终锁定了这十八行。这个也给了我一个教训，以后修改的时候，备份是非常非常重要的，你不知道你的修改，或者失误，可能会给你带来多么大的麻烦。 6.仍未解决的问题或者未来自己想增加的功能 未解决的问题有： 如何做到网易云播放器不随着页面刷新而刷新 域名问题，还没注册一个域名 之后想增加的功能有：增加一个live 2D模型 7 总结这一次博客建立用的是一键部署，中间也通过google参考了很多dalao的建议，增加了很多插件和功能，才弄出来了一个这样的blog。其中遇到的问题也不少，最初使用别人的模板的时候由于不会配置对应的配置文件导致调试的时候一直报错，而自己又不知道问题出在哪，只能重新fork重新来过。后来也就慢慢摸索走了过来，其中也google加入了很多自己觉得挺不错的功能，比如网易云的播放器（我一直认为在看blog的时候来一点舒适的轻音乐是极好的）。然后在适应markdown语法的时候自己也经常出一些问题，比如代码的引用，自己之前由于胡乱引用导致在实际调试时，出现了代码没有翻译过去的情况，最后是重新对照markdown语法重新看了一遍之后才发现。问题其实还有不少，就先举这些。建立这个blog花了大概四天时间吧，包括摸索和增加一些功能，过程也是比较累的，也有了我大学的第一次通宵。但是当我看到我的blog一步步从简陋变得更好一些，我心里还是很开心的。这个过程也学到了一些东西，虽然是一些皮毛，但是我也会加油的。希望这个blog能够在以后学习的时候变得更好看，陪我走过以后的生涯咯","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]}]}