<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <link href="/2018/10/05/hello-world2/"/>
      <url>/2018/10/05/hello-world2/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33469292&auto=0&height=66"></iframe></h2><p>#搭建博客的总结<br>author：守望海的胖子<br>标签（空格分隔）： 随笔</p><hr><p>##1.前言</p><ul><li>关于搭建这个博客的缘由，有两个吧，一个是完成露西师兄的作业，也可以说是主要原因：另一个也是想找个地方，可以写一写自己想写的东西，表达一些自己的想法</li><li>在这过程中遇到的问题也不少，因为自己刚入门，可以说是没基础了，所以也不可能自己动手去写一个博客出来，就只能沿用别人搭好了的博客来自己配置一下</li></ul><hr><p>##2.涉及到的内容以及搭建说明</p><p>###以下是我对这一次搭建博客的总结，我会写到以下内容</p><ul><li>搭建博客的具体过程以及搭建博客时遇到的问题</li><li>现存的问题以及未来想解决的问题<br>###搭建说明</li><li>本文用到的系统为windows10 家庭版</li><li><code>###</code>为该命令的注释</li><li>站点配置文件，位于站点文件夹根目录：/blog</li><li>主题配置文件，位于主题文件夹根目录内：/blog/themes/主题/_config.yml</li></ul><hr><p>##3.搭建前的准备<br><em>在google了之后，我最终选择了hexo+github搭建个人网站，而我选择的理由如下</em></p><ul><li>免费：github提供gh-pages服务是免费的</li><li>简单：博客完全托管在github上，基本上不需要花时间去管理（对我这种小白友好一点）<br>###3.1 安装Github</li><li>先前往GitHub官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>  进行注册</li><li>之后在Github创建一个自己的仓库：右上角选择，your Repositories，之后新建一个仓库命名为 <strong>我的用户名.github.io（比如我就是yww-poi.github.io）</strong></li><li><p>之后是安装Github：</p><ul><li>windows的话点击[下载地址][1]下载后一路next</li><li>linux可以先用命令<code>$ git</code>查看是否安装<br>如果没有安装则可用命令<code>$ sudo apt-get install git ###适用于ubuntu linux</code>直接安装<br>###3.2 配置SSH Kye<br><em>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</em></li></ul></li><li><p>用git bash执行如下命令：<code>$ cd ~/. ssh</code><br>会提示：No such file or directory </p></li><li><p>之后输入命令<code>$ ssh-keygen -t rsa -C &quot;邮件地址&quot;</code><br>邮箱改为自己的地址，三次回车</p></li><li><p>打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开github主页，进入个人设置 -&gt; SSH and<br>GPG keys -&gt; New SSH key：将刚复制的内容粘贴到key那里。</p></li><li><p>测试看看是否配置成功</p></li><li><p>1.用git bash执行如下命令：<code>$ ssh -T git@github.com</code></p></li><li>2.之后会提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：<br>Hi yww-poi! You’ve successfully authenticated, but GitHub does not provide shell access.</li><li>3.之后配置：<br> <code>$ git config --global user.name &quot;yww-poi&quot;</code><br> <code>$ git config --global user.email  &quot;xxx@qq.com&quot;</code><br>邮箱改为自己的地址<br>###3.3 安装hexo</li><li>鼠标右键 git bash下执行：<code>$ npm install -g hexo</code></li><li>接着输入<code>$ cd /h/hexo/</code> 在这个路径新建一个名为hexo的文件夹，该文件夹用于存放代码</li><li>再输入<code>$ hexo init</code> 执行后hexo会自动下载一些文件到所指定目录</li><li>之后执行<br><code>$ hexo g ### 生成</code><br><code>$ hexo s###启动服务</code><br>hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的。</li><li><p><code>$ hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000即可预览" target="_blank" rel="noopener">http://localhost:4000即可预览</a><br>###3.4 安装node.js</p></li><li><p>先下载并安装，一路next，这里给出下载地址：[64位windows系统][2]</p></li><li>检查Node.js版本，win+r组合键，输入cmd，然后输入命令<code>$ node --version</code></li><li>如果输出的是一个版本号，则成功安装node.js<br>###3.5 设置博客</li><li>在自己选择的目录（这里我选择的是H盘根目录）按住Shift键点击鼠标右键，选择“在此处打开命令窗口”，输入<code>$ hexo init blog</code><br>之后会有提示<br><code>INFO  Start blogging with Hexo!</code></li><li>之后进入新建的blog文件夹，在此处打开命令窗口<strong>（由于以后大多都是在这个地方打开命令行窗口，故以后将简化为打开cmd）</strong>，然后输入命令</li><li><p><code>$ hexo g ### 启动本地服务器</code><br><code>$ hexo s ###在浏览器输入 http://localhost:4000/就可以看见网页和模板了</code><br>之后会有提示<br><code>INFO  Start processingINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</code><br>就可以打开<a href="http://localhost:4000/浏览博客初步的模样了" target="_blank" rel="noopener">http://localhost:4000/浏览博客初步的模样了</a><br>###3.6 将博客发布到github</p></li><li><p>重新打开CMD，输入：<code>$ ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot;</code></p></li><li>一直enter，直到得到信息<code>Your public key has been saved in /c/Users/user/.ssh/id_rsa.pub.</code></li><li>找到该文件，打开（sublime text），Ctrl + a复制里面的所有内容，然后进入Sign in to GitHub：<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a><br>New SSH key ——Title：blog —— Key：输入刚才复制的—— Add SSH key<br>###3.7 这个过程中遇到的问题总结<br>在这个过程中总体还是比较平稳的，没发生什么大的问题，除了在设置博客的时候因为google查阅的文章的操作不全，而导致在blog外的目录打开的命令行输入的命令无效，让我头疼了比较久的时间，总体上还是比较平稳的</li></ul><hr><p>##4 博客的基本配置<br>在以上操作之后我们得到了一个最基本的博客页面，但是只是最基本的页面，里面什么也没有，所以需要设置一下让它看起来不至于很单调…</p><p>###4.1 文章的发布<br><em>博客就是写东西分享给人看的，所以建立一个博客首先要学会的最基本的操作就是如何写文章并发布</em></p><ul><li><p>创建文档有两种方法</p><ul><li>命令法：打开cmd，输入<code>$ hexo new hello world ###此处可以替换为文章名&quot;</code><br>文章将会存放在\source_posts中，用文本编译器编译文章</li><li>直接法：在 <strong>source/_posts/</strong>下新建一个 .md文件也可</li></ul></li><li><p><strong>在编译时请使用markdown语法</strong>，具体可以点击[markdown语法介绍][3]进行查看</p></li><li>编译完成后，输入命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo g` </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li></ul><p>打开<a href="http://localhost:4000即可查看该文章" target="_blank" rel="noopener">http://localhost:4000即可查看该文章</a></p><ul><li>在本地编辑完成后，输入命令：<code>$ hexo d ###发布至github</code><br>即可发布到你的博客<br>###4.2 站点文件配置：关于站点文件信息的修改[详见此网页][4]</li></ul><p>###4.3 博客的主题配置<br><em>对小白来说，自己不会自己写一个，又想要好看的博客，最好的方法就是使用别人的主题，在github中有很多很好看的主题，可以fork过来然后自己配置，然后加上一些自己喜欢的小功能并配置，那么以下我放上自己配置的过程</em></p><ul><li>hexo有很多好看的主题，让我们先去[官网][5]挑一个，我选用的是next主题</li><li>之后是下载，选择你想要的主题下载下来，打开cmd执行命令：`$ git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</li><li>在网站配置文件<strong>_config.yml中，配置theme</strong><br><code>theme: next ###next更换为对应主题的名词</code></li><li><p>之后，执行调试命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo c</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li><li><p>在确认之后可以配置到github:<code>$ hexo d</code></p></li><li>这样我们就得到了主题的最基本的框架了，之后就是自己的配置了</li></ul><h3 id="4-4-这个阶段遇到的问题以及总结"><a href="#4-4-这个阶段遇到的问题以及总结" class="headerlink" title="4.4 这个阶段遇到的问题以及总结"></a>4.4 这个阶段遇到的问题以及总结</h3><p>因为自己还没学会如何写一个博客的框架，所以选择了自己去fork一个，最初fork的框架由于自己不明白如何去设置配置文件，而导致自己的一些设置保存了却无效的情况，最终也是在配置完成之前先把自己折腾坏了，放弃了最初的框架。随后发现了hexo的官网是有主题可以去挑选的，最终选择了next这个主题，因为这个主题很简洁，吸引了我，有了第一次配置的失误，第二次配置也就轻松了点。</p><hr><p>##5.  博客主题的配置以及个性化设置</p><h3 id="5-1-主题文件配置"><a href="#5-1-主题文件配置" class="headerlink" title="5.1 主题文件配置"></a>5.1 主题文件配置</h3><p>修改目录/theme/主题名称/下的主题配置文件可以对主题进行一些最基本的配置，可以参考[该网页][6]进行配置</p><h3 id="5-2-添加标签页面与关于页面"><a href="#5-2-添加标签页面与关于页面" class="headerlink" title="5.2 添加标签页面与关于页面"></a>5.2 添加标签页面与关于页面</h3><ul><li><p>标签页设置</p><ul><li><p>新建一个标签页面</p><p><code>$ hexo new page tags</code><br>你会发现你的source文件夹下有了tags/index.md，打开index.md文件将title设置为<code>title: 标签</code></p></li><li>打开 主题配置文件，找到menu，将tags前的<code>#</code>删除</li><li>把文章添加标签只需在文章的顶部标题下方添加tags字段，即可自动创建标签名并归入对应的标签中</li></ul></li><li><p>关于页面设置</p><ul><li>新建一个关于页面<code>hexo new page about</code></li><li><p>修改主题配置文件，取消 <code>#about: /about</code> 这行注释<br>commonweal: /404.html 编辑站点目录下</p></li><li><p>编辑source/about 的 index.md 文件内容，内容将显示在关于页面。</p></li><li><p>启动本地服务，就可以看到关于菜单，点击可进入关于页，显示内容即是 source/about/index.md 对应内容。</p></li></ul></li></ul><h3 id="5-3-添加分类模块"><a href="#5-3-添加分类模块" class="headerlink" title="5.3 添加分类模块"></a>5.3 添加分类模块</h3><ul><li>新建一个分类页面：<code>$ hexo new page categories</code></li><li>你会发现你的source文件夹下有了categorcies/index.md，打开index.md文件将title设置为title: 分类</li><li>打开 主题配置文件 找到menu，将categorcies前的<code>#</code>删除</li></ul><p>把文章归入分类只需在<strong>文章的顶部标题下方添加categories字段</strong>，即可自动创建分类名并加入对应的分类中</p><h3 id="5-4-站点建立时间"><a href="#5-4-站点建立时间" class="headerlink" title="5.4 站点建立时间"></a>5.4 站点建立时间</h3><p>这个时间将在站点的底部显示，例如© 2018。编辑主题配置文件，新增字段 <code>since: 2018</code></p><h3 id="5-5-在文末添加”本文结束”"><a href="#5-5-在文末添加”本文结束”" class="headerlink" title="5.5 在文末添加”本文结束”"></a>5.5 在文末添加”本文结束”</h3><ul><li><p>在 \themes\next\layout_macro 新建 passage-end-tag.swig 文件<br>添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;  1. &lt;div&gt;</span><br><span class="line">&gt;  2. &#123;% if not is_index %&#125;</span><br><span class="line">&gt;  3. &lt;div style=&quot;text-align:center;color: #636363;font-size:14px;letter-spacing: 10px&quot;&gt;本文结束啦&lt;i class=&quot;fa fa-bell&quot;&gt;&lt;/i&gt;感谢您的阅读&lt;/div&gt;</span><br><span class="line">&gt;  4. &#123;% endif %&#125;</span><br><span class="line">&gt;  5. &lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>打开文件： \themes\next\layout_macro\post.swig，找到post-body 并添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;  1. &lt;div&gt;</span><br><span class="line">&gt;  2.     &#123;% if not is_index %&#125;</span><br><span class="line">&gt;  3.          &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">&gt;  4.     &#123;% endif %&#125;</span><br><span class="line">&gt;  5. &lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>最后在 主题配置文件 末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;  1. // 文本结束提示语</span><br><span class="line">&gt;  2. passage_end_tag:</span><br><span class="line">&gt;  3. enabled: true</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/2018/09/23/hello-world/"/>
      <url>/2018/09/23/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33469292&auto=0&height=66"></iframe></h2><h2 id="title-Hello-World"><a href="#title-Hello-World" class="headerlink" title="title: Hello World"></a>title: Hello World</h2><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
